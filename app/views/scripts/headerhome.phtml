<?php
/*
 * Created on Mar 7, 2008
 *
 *  Built for itechweb
 *  Fuse IQ -- todd@fuseiq.com
 *
 */
date_default_timezone_set('Africa/Lagos');
echo 
    '<link href="https://maxcdn.bootstrapcdn.com/font-awesome/4.6.3/css/font-awesome.min.css" rel="stylesheet" >';
function no_soft_space_str($v){
	return str_replace(' ', '&nbsp;', $v);
}

$navMain = array( // directory => array of nav items
  'index' => array(
    'index' => t('Home'), // file => label (use "index" for root)
  ));

if ($this->isLoggedIn() ) {

	if ( $this->hasACL('in_service')) {
		if ( $this->hasACL('edit_course')  ){
			$navMain['training'] = array(
			'index' => t('Trainings'),
	    'view'  => t('View/Edit').' '.t('Training'),
	    'add' => t('Add New').' '.t('Training')
			);
		} else {
			$navMain['training'] = array(
			'index' => t('Trainings'),
	    'view'  => t('View').' '.t('Training')
			);
		}

		if ( $this->hasACL('edit_people')  ){
			$navMain['person'] = array(
			'index' => t('People'),
			'search'  => t('View/Edit Person'),
			'add' =>  t('Add New Person')
			);
		} else {
			$navMain['person'] = array(
			'index' => t('People'),
			'search'  => t('View Person'),
			);
		}

                $auth = Zend_Auth::getInstance();
if ($auth->hasIdentity()) {
    // Identity exists; get it
    $identity = $auth->getIdentity();
  // $identify = $identity;
   
    
    foreach($identity as $identify){
       $details_user[] = $identify;
    }
    //print_r($details_user);
    $user = $details_user[0];
     
}
 $db = Zend_Db_Table_Abstract::getDefaultAdapter ();

		$sql = "SELECT  role,province_id,district_id,region_c_id FROM user WHERE id ='".$user."'";
		$result = $db->fetchAll($sql);
               $role = $result[0]['role'];

		if ( $this->hasACL('edit_course') or $this->hasACL('edit_people') or $this->hasACL('view_people') ) {
			$navMain['facility'] = array('index' => t('Places'));

			if (   $this->hasACL('edit_people')  ) {
				$navMain['facility']['search']  = t('View/Edit Facility');
			} else if ($this->hasACL('view_people')) {
				$navMain['facility']['search']  = t('View Facility');
			}

                        if (   $this->hasACL('edit_people') && $this->hasACL('add_new_facility') && $role="1") { //TA:17:12: 10/04/2014

				$navMain['facility']['add']  = t('Add Facility');
			}

			if (   $this->hasACL('edit_course')  && $this->setting['display_training_location']) { //TA:17:14:
     	$navMain['facility']['searchLocation']  = t('View/Edit').' '.t('Training').' '.t('Location');
			} else if ($this->hasACL('view_course')) {
     	$navMain['facility']['searchLocation']  = t('View').' '.t('Training').' '.t('Location');
			}
			if (   $this->hasACL('edit_course') && $this->setting['display_training_location']) { //TA:17:14:)
      	$navMain['facility']['addLocation']  = t('Add').' '.t('Training').' '.t('Location');
			}
		}
$navMain['reports'] = array('index' => t('Reports'));
$navMain['reports']['alldata'] = t('All Data');
$navMain['reports']['trainingrep'] = t('Training Data');
                         $navMain['reports']['facilitysummary']				= t('Facility  Data');
                         $user = new User();
              //TP checking if the user is a user with an LGA ROLE

$navMain['reports']['archivedreports']				= t('Archived PDF Reports');

                       
                         //$navMain['reports']['allqueries']				= t('All Data');
                         
		if ( $this->hasACL('view_create_reports') && $this->setting['display_country_reports']) { //TA:17: 09/11/2014
			

			/*if ( $this->setting['display_mod_skillsmart'] ) {


				$navMain['reports']['person->reports']               = t('Individual Report');
				$navMain['reports']['comp']                          = t('Competence Overview Report');
				$navMain['reports']['prof']                          = t('Professional Reports');
				$navMain['reports']['compcomp']                      = t('Competence Compare Reports');
				$navMain['reports']['quescomp']                      = t('Question Compare Reports');
				$navMain['reports']['../']                           = '---------------';
			}
*/
			//$navMain['reports']['trainingByParticipants']            = t('Training').space.t('Reports');
			//$navMain['reports']['participantsByCategory/cat/pepfar'] = t('Participant').space.t('Reports');
			/*if ($this->setting['display_budget_code']) {
				$navMain['reports']['budgetcode']                    = t('Budget Code').space.t('Reports');
			}*/
			// TA:17:21 $navMain['reports']['trainers']                          = t('Trainer').space.t('Reports');
			//$navMain['reports']['trainingByFacilityCount']           = t('Facility').space.t('Reports');
			//$navMain['reports']['needsByPersonName']                 = t('Assessment').space.t('Reports');
			// TA:17:21 $navMain['reports']['roster']                            = t('Roster').space.t('Reports');
			// TA:17:21 $navMain['reports']['evaluations']                       = t('Evaluations').space.t('Reports');
			//$navMain['reports']['data']                              = t('Data Downloads');
                         

			//  '' =>

			if ( !$this->setting['display_training_recommend'] ) {
				unset($navMain['reports']['needsByPersonName']);
			}

			if ( $this->hasACL('pre_service')) {
				$navMain['reports']['..//']                          = '---------------';
				$navMain['reports']['psStudentsTrained']			= t('Student Reports');
				$navMain['reports']['psCourseByName']				= t('Course Reports');
				$navMain['reports']['psCohortByParticipantCount']	= t('Cohort Reports');
				$navMain['reports']['psInstitutionInformation']		= t('Institution Reports');
				$navMain['reports']['psTutorByName']				= t('Tutor Reports');
				// $navMain['reports']['trainingrep'] = t('Training Reports');
                         //$navMain['reports']['facilitysummary']				= t('Facility  Reports');
                         //$navMain['reports']['allqueries']				= t('All Queries');
                                //$navMain['reports']['allqueries']				= t('All Queries');
			}
		}
                
                
                
                $navMain['menu'] = array('index' => t('info'));
                $navMain['menu']['definitionspage'] = t('Definitions');
             
              $navMain['menu']['rrate'] = t('Reporting Rates');
               $navMain['menu']['info'] = t('DHS 2013');
             $user = new User();
              //TP checking if the user is a user with an ADMIN ROLE
                if($user->is_user_an_admin()){
                    
                     $navMain['menu']['import'] = t('Import DHS Data');
                
                
                     //TP: Adding Analytics Link if user is na Admin
                     $navMain['analytics'] = array('index'=>'Analytics');
                    
                }
                $navMain['menu']['userguide'] = t('User Guide');
		if ( $this->setting['module_evaluation_enabled']) {
			$navMain['evaluation'] = array(
			'index' => t('Evaluations')
			);
		}
	}

	// PRE-SERVICE LINK
	if ( $this->hasACL('pre_service') or $this->hasACL('admin_preservice') ) {
		$navMain['dash'] = array(
		'index' => t('Pre-service')
		);
	}

  // employee mod link
  if ($this->setting['module_employee_enabled'])
    $navMain['employee'] = array('index' => t('Employees') );


  // employee header (override other menus)
  $controller = Zend_Controller_Front::getInstance()->getRequest()->getControllerName();
  if ($controller == 'employee' || strstr($_SERVER['REQUEST_URI'] , 'reports/employees') || strstr($_SERVER['REQUEST_URI'] , 'reports/partners') || $controller == 'site' || $controller == 'partner')
  {
    $navMain = array( // directory => array of nav items
    'index' => array(
    'index' => t('Home'), // file => label (use "index" for root)
    ));
    $navMain['partner'] = array( 'index' => t('Partners') );
    $navMain['partner']['add']     = t('Add').space.('Partner');
    $navMain['partner']['search']  = t('View/Edit').space.('Partner');
    $navMain['employee'] = array( 'index' => t('Employees') );// BS:1:10/06/2014 translate employee/employees
    $navMain['employee']['add']    = t('Add').space.t('Employee'); 
    $navMain['employee']['search'] = t('View/Edit').space.t('Employee');
    #$navMain['site'] = array( 'index' => t('Sites') );
    #$navMain['site']['search']     = t('View/Edit').space.('Site');
    #$navMain['site']['add']        = t('Add').space.('Site');
    $navMain['reports'] = array( 'index' => t('Reports') );
    $navMain['reports']['employees'] = t('Employees');
    $navMain['reports']['partners'] = t('Partners');
  }

	$navMain['user'] = array(
	'index' => t('My Account'),
	);

	if ( $this->hasACL('edit_country_options')) {
		$navMain['user']['../admin/country-settings'] = t('Country Setup');
		$navMain['user']['../admin/training-settings'] = t('Training Settings');
		$navMain['user']['../admin/people-settings'] = t('People Settings');
		$navMain['user']['../admin/facilities-settings'] = t('Facility Settings');
	}
	if ( isset($this->setting['display_training_partner']) && $this->setting['display_training_partner'] == 1 ) {
		if ( $this->hasACL('edit_country_options') ) {
      $navMain['user']['../training-partner/search']  = no_soft_space_str( t('Training').' '.t('Partners') );
		}
	}
  if ( isset($this->setting['module_employee_enabled']) && $this->setting['module_employee_enabled'] == 1 ) {
    if ( $this->hasACL('edit_country_options') ) {
      $navMain['user']['../admin/employee-settings']  = no_soft_space_str( t('Employees').' '.t('Settings') );
    }
  }
	if ( $this->hasACL('add_edit_users')) {
		$navMain['user']['add'] = t('Add New User');
		$navMain['user']['search'] = t('Edit User');
	}
        if($user->is_user_an_admin()){
            $navMain['user']['requestaccess'] = t('View Request User Registration');
          }

	 $user = new User(); 
	if ( ($this->hasACL('edit_country_options') || $this->hasACL('use_offline_app')) && $user->is_user_an_admin()){
		//$navMain['user'][''] = '---------------';
		//$navMain['user']['../desktop/create'] = no_soft_space_str( t('Create App Now') );
		//$navMain['user']['../desktop/download'] = no_soft_space_str( t('Download Application') );
		//$navMain['user']['../desktop/download-dotnet'] = no_soft_space_str( t('Get Required .NET') );
		//$navMain['user']['../sync/upload'] = t('Upload Data');
	}
	if (( $this->hasACL('admin_preservice')) || ( $this->hasACL('pre_service'))) {
		$navMain['user']['../'] = '---------------';
		$navMain['user']['../admin/preservice-labels'] = t('PS Field labels');
		$navMain['user']['../admin/preservice-classes'] = t('PS Classes');
		$navMain['user']['../admin/preservice-cadres'] = t('PS Cadres');
		$navMain['user']['../admin/preservice-degrees'] = t('PS Degrees');
		$navMain['user']['../admin/preservice-funding'] = t('PS Funding');
		$navMain['user']['../admin/preservice-institutiontypes'] = t('PS Institution Types');
		$navMain['user']['../admin/preservice-joindropreasons'] = t('PS Join & Drop Reasons');
		$navMain['user']['../admin/preservice-languages'] = t('PS Languages');
		$navMain['user']['../admin/preservice-nationalities'] = t('PS Nationalities');
		$navMain['user']['../admin/preservice-sponsors'] = t('PS Sponsors');
		//$navMain['user']['../admin/preservice-studenttypes'] = t('PS Student Types'); //TA: removed 7/28/2014: not using any more
		$navMain['user']['../admin/preservice-tutortypes'] = t('PS Tutor Types');
		$navMain['user']['../admin/preservice-coursetypes'] = t('PS Course Types');
		$navMain['user']['../admin/preservice-religion'] = t('PS Religions');
	}
}

else{

 $navMain['index/requestaccess'] = array('index' => t('Request Access'));   
}

$firstName = 'guest';
$loginoutLink =  '<a href="'.(Settings::$COUNTRY_BASE_URL).'/user/login">'.t("login").'</a>';
if ( $this->isLoggedIn() ) $firstName = $this->identity->first_name;
if ( $this->isLoggedIn() ) $loginoutLink = '<a href="'.(Settings::$COUNTRY_BASE_URL).'/user/logout">'.t("logout").'</a>';

// custom inline CSS
if(isset(Settings::$CSS)) {
	echo '<style>' . Settings::$CSS . '</style>';
}

?>


<!-- login links -->
<a href="<?php echo Settings::$COUNTRY_BASE_URL;?>"><img src="<?php
	$url_parts = explode('.', $_SERVER['HTTP_HOST']);
	$engender = false;
	if ( isset($this->setting['logo_id']) ) {
		echo Settings::$COUNTRY_BASE_URL.'/images/indexhome.png';
	} else if ( @$url_parts[0] == 'eventsmart' OR @$url_parts[1] == 'eventsmart' ) {
		echo Settings::$COUNTRY_BASE_URL.'/images/indexhome.png';
		$engender = true;
	} else {
		switch ( strtolower(Settings::$COUNTRY_NAME) ) {
			case 'haiti':
			echo Settings::$COUNTRY_BASE_URL.'/images/haiti_flag.jpg';
			break;
			case 'tanzaniapartners':
			echo Settings::$COUNTRY_BASE_URL.'/images/tanzanian_flag.png';
			break;
			case 'tanzanianacp':
			echo Settings::$COUNTRY_BASE_URL.'/images/tanzanian_flag.png';
			break;
			default:
			echo Settings::$COUNTRY_BASE_URL.'/images/indexhome.png';
			break;
		}
	}

?>" id="headerImg" alt="banner" /></a>
<!-- TA:17:15 changes css -->
<style>
.ui-dialog-titlebar {
  display: none;
}
.no-close .ui-dialog-titlebar-close  {
  display: none;
}
</style>

<div id="loader" class="text-xs-center" style="display:none; vertical-align: middle">
  <i class="fa fa-spinner fa-2x fa-spin" style="color: #008C00"></i>
</div>


<div style="float:right;">
	<div id="headerLinks">
		<?php print t('Welcome');?>, <?php echo $firstName;?> <span class="pipe">|</span> <?php echo  $loginoutLink;?>&nbsp;

		<!-- switch language -->
		<div style="margin-top:70px; text-align:right; ">
			<?php
			if(count($this->languages_enabled) > 1) {
				foreach( $this->languages_enabled as $lang_opt) {
					$opts []= '<a href="'.Settings::$COUNTRY_BASE_URL.'/index/language?opt='.urlencode($lang_opt).'">'.t($this->languages[$lang_opt]).'</a>';
				}
				print implode ('&nbsp;|&nbsp;', $opts);
			}
			?>
		</div>

	</div>

</div><div class="clear"></div>

	<!-- main navigation -->
	<div id="navMain">
		<?php
		// Detect page
		$parsed_url = parse_url(Settings::$COUNTRY_BASE_URL);
		$pathFront = @$parsed_url['path'];
		if ( $pathFront )
		$path = str_replace($pathFront,'',$_SERVER['REQUEST_URI']);
		else
		$path = $_SERVER['REQUEST_URI'];
		// Sean Smith: Added filter out double slashes (handles improper config in globals.php, and other unforseeables)
		$path = str_replace("//",'/',$path);
		$path = str_replace("\\",'/',$path);
		$path = explode('/',$path);

		foreach($navMain as $dir => $navRay) {
			$class = array();
			if($dir == 'index') { $class[] = 'first'; /*$dir = '' ;*/  } // special CSS // uncomment to apply active class (always on) the ohome link

			// add "active" class
			if(empty($path[1]) || /*empty($dir) ||*/ $path[1] == $dir) { $class[] = 'active'; } /* commenting out always-on for home link */

			echo '
			<div class="flydown" '.($dir == 'user'? 'style="float:right;"':'').' onmouseover="fadeShow(this,\''.$dir.'\');" onmouseout="fadeOut(this,\''.$dir.'\');">
			';
                        if($dir == 'index' || $dir=='dash' || $dir=='user' || $dir=="index/requestaccess" || $dir == "analytics") {
                          echo '<a href="'.Settings::$COUNTRY_BASE_URL.'/'.$dir.'" id="nav'.$dir.'">' . $navRay['index'] . '</a>';  
                        }else{
                         echo '<a href="#" id="nav'.$dir.'">' . $navRay['index'] . '</a>';   
                        }
			//echo '<a href="#" id="nav'.$dir.'">' . $navRay['index'] . '</a>';

			// Fly-down menu items
			if(count($navRay) > 1) {
				echo '<div class="flydownItems">';
				foreach($navRay as $file => $label) {
					if( strstr($file, '->') ){
						$fragments = explode('->', $file);
						echo '<a '.(strlen($file)?'href="'.Settings::$COUNTRY_BASE_URL.'/'.$fragments[0].'/'.$fragments[1].'"':'').' >'.$label.'</a>';
					} else {
						if($file != 'index') {
							echo '<a '.(strlen($file)?'href="'.Settings::$COUNTRY_BASE_URL.'/'.$dir.'/'.$file.'"':'').' >'.$label.'</a>';
						}
					}
				}
				echo '</div>';
			}

			echo '</div>';

		}

		?>


	</div>

<script>
  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','https://www.google-analytics.com/analytics.js','ga');

  ga('create', 'UA-77142227-1', 'auto');
  ga('send', 'pageview');

  dialogBox = null;

  function startLoading()
{
     console.log("starting dialog box loader");
  dialogBox = $("#loader").dialog({
      modal : true,
      dialogClass: "no-close",
      resizable: false,
      draggable: false,
      height : 70,
      width : 150
  });
}

function stopLoading()
{
 console.log("closing dialog box loader");
 dialogBox.dialog('close');
 console.log("closed dialog box loader");
}
</script>